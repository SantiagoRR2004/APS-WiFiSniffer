[
    {
        "id": "3997621668a57e4e",
        "type": "tab",
        "label": "Proyecto 7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "61e3b15a79e1e75e",
        "type": "mysql2",
        "z": "3997621668a57e4e",
        "name": "",
        "server": "0d47e059107c05dd",
        "bind": "",
        "topic": "",
        "x": 760,
        "y": 340,
        "wires": [
            [
                "527b629cb9621ae4"
            ]
        ]
    },
    {
        "id": "7421932a43d4c3e3",
        "type": "inject",
        "z": "3997621668a57e4e",
        "name": "INSERT MANUAL SI MAC EXISTE ACTUALIZA LOS DATOS",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO devices(mac,id_m5,potencia) values(\"46-1B-74-52-E9-D4\",1,-69) ON DUPLICATE KEY UPDATE mac=\"46-1B-74-52-E9-D4\";",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "61e3b15a79e1e75e"
            ]
        ]
    },
    {
        "id": "03f844719f8bb4b6",
        "type": "function",
        "z": "3997621668a57e4e",
        "name": "function1",
        "func": "var sql = \"INSERT INTO devices(mac, id_m5, channel, potencia) values('\" + msg.mac + \"',\" + msg.m5id + \",\" + msg.channel + \",\" + msg.db + \") ON DUPLICATE KEY UPDATE mac = '\" + msg.mac+\"';\";\nmsg.topic=sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "61e3b15a79e1e75e"
            ]
        ]
    },
    {
        "id": "40fc5b3ce8f686f2",
        "type": "inject",
        "z": "3997621668a57e4e",
        "name": "consulta contaje por m5id=1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM devices WHERE id_m5=1",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "61e3b15a79e1e75e"
            ]
        ]
    },
    {
        "id": "527b629cb9621ae4",
        "type": "debug",
        "z": "3997621668a57e4e",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "5b57b9bc5f6fd286",
        "type": "inject",
        "z": "3997621668a57e4e",
        "name": "parametros insercion SQL",
        "props": [
            {
                "p": "mac",
                "v": "4A-E6-A5-93-01-50",
                "vt": "str"
            },
            {
                "p": "db",
                "v": "-56",
                "vt": "num"
            },
            {
                "p": "m5id",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "03f844719f8bb4b6"
            ]
        ]
    },
    {
        "id": "59a9c5ed2c2b9261",
        "type": "inject",
        "z": "3997621668a57e4e",
        "name": "consulta contaje agrupado por m5id",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT id_m5,COUNT(*) FROM devices group by id_m5",
        "x": 220,
        "y": 620,
        "wires": [
            [
                "61e3b15a79e1e75e"
            ]
        ]
    },
    {
        "id": "a96cf614afbc9d05",
        "type": "mqtt in",
        "z": "3997621668a57e4e",
        "name": "",
        "topic": "aps2023/Proyecto7/MAC_list/#",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d27d21fb38be7068",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "9e0d788379f5b065",
                "d2743131dee159ef",
                "7950ea7cdb40b98c"
            ]
        ]
    },
    {
        "id": "9e0d788379f5b065",
        "type": "debug",
        "z": "3997621668a57e4e",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 240,
        "wires": []
    },
    {
        "id": "f3dcd7537767f95b",
        "type": "function",
        "z": "3997621668a57e4e",
        "name": "Divider",
        "func": "function extract_id(mqtt_topic) {\n    var topicParts = mqtt_topic.split(\"/\");\n    return parseInt(topicParts[topicParts.length - 1]);\n}\nmsg.m5id = extract_id(msg.topic)\nvar macs = msg.payload;\n\ndelete msg.qos;\ndelete msg._msgid;\ndelete msg.topic;\ndelete msg.retain;\ndelete msg.payload;\n\n\nfor (let i = 0; i < macs.length; i++) {\n    const item = macs[i];\n    msg.mac = item.mac.replace(/:/g, \"-\");\n    msg.db = item.rssi;\n    msg.channel = item.channel;\n    node.send(msg)\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 160,
        "wires": [
            [
                "39fd7057efb0cbc2",
                "08d22de43215f2b0"
            ]
        ]
    },
    {
        "id": "39fd7057efb0cbc2",
        "type": "debug",
        "z": "3997621668a57e4e",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 60,
        "wires": []
    },
    {
        "id": "08d22de43215f2b0",
        "type": "delay",
        "z": "3997621668a57e4e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "03f844719f8bb4b6"
            ]
        ]
    },
    {
        "id": "a7c2545f4aec3f52",
        "type": "comment",
        "z": "3997621668a57e4e",
        "name": "Explicación limitador",
        "info": "Es necesario limitar el número que entran porque sino falla phpMyAdmin.",
        "x": 710,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2743131dee159ef",
        "type": "function",
        "z": "3997621668a57e4e",
        "name": "MAC Eliminator",
        "func": "function eliminateDuplicateMacs(data) {\n    // Create an object to store the unique MAC addresses with their corresponding RSSI values\n    const uniqueMacs = {};\n    // Iterate over the data array\n    for (let i = 0; i < data.length; i++) {\n        const { mac, channel, rssi } = data[i];\n        // Check if the MAC address already exists in uniqueMacs\n        if (uniqueMacs.hasOwnProperty(mac)) {\n            // If the current RSSI value is higher than the stored value, update it\n            if (rssi < uniqueMacs[mac].rssi) { // Compare using less than operator\n                uniqueMacs[mac].rssi = rssi;\n                uniqueMacs[mac].channel = channel;\n            }\n        } else {\n            // If the MAC address doesn't exist, add it to uniqueMacs\n            uniqueMacs[mac] = { mac, channel, rssi };\n        }\n    }\n    // Convert the uniqueMacs object back to an array\n    const uniqueMacsArray = Object.values(uniqueMacs);\n    return uniqueMacsArray;\n}\n\nvar macs = JSON.parse(msg.payload);\nmsg.payload = eliminateDuplicateMacs(macs);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 140,
        "wires": [
            [
                "36ed8c05bdd09fc3",
                "f3dcd7537767f95b"
            ]
        ]
    },
    {
        "id": "36ed8c05bdd09fc3",
        "type": "debug",
        "z": "3997621668a57e4e",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 40,
        "wires": []
    },
    {
        "id": "e3db9d60e991f906",
        "type": "e-mail",
        "z": "3997621668a57e4e",
        "server": "mail.innebo.es",
        "port": "25",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": false,
        "name": "lcanlemh4x@gmail.com",
        "dname": "",
        "x": 330,
        "y": 320,
        "wires": []
    },
    {
        "id": "7950ea7cdb40b98c",
        "type": "function",
        "z": "3997621668a57e4e",
        "name": "function 14",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0d47e059107c05dd",
        "type": "mysql2-server",
        "host": "core-mariadb",
        "port": "3306",
        "username": "aps2023",
        "password": "aps2023",
        "db": "grupo_q",
        "servername": "grupo_q"
    },
    {
        "id": "d27d21fb38be7068",
        "type": "mqtt-broker",
        "name": "Mosquitto",
        "broker": "192.168.5.71",
        "port": "2883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]
